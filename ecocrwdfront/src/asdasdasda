
  const fetchAllProjects = async () => {
    try {
      let allProjects = [];
      let page = 1;
      let response;
  
      do {
        response = await axios.get(`/api/projects?page=${page}`);
        allProjects = [...allProjects, ...response.data.Projects];
        page++;
      } while (page <= response.data.meta.last_page);
  
      setProjects(allProjects);
    } catch (error) {
      console.error('Error fetching projects:', error);
    }
  };

  useEffect(() => {
    fetchAllProjects();
  }, []);

  
  function handleLogout(){
    let config = {
      method: 'post',
      url: 'api/logout/',
      headers: { 
        'Authorization': "Bearer "+window.sessionStorage.getItem("auth_token")
      }
    };
    
    axios.request(config)
    .then((response) => {
      console.log(JSON.stringify(response.data));
      window.sessionStorage.setItem("auth_token", null);
      setToken(null);
    })
    .catch((error) => {
      console.log(error);
    });
    
  }
  const addToken = (auth_token) => {
    setToken(auth_token);
    fetchUserDetails(auth_token);
  };

  
  const fetchUserDetails = (token) => {
    if(token===null){
      return;
    }
    console.log(token);
      axios.get('api/profile', {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      })
      .then((response) => {
        setUserRole(response.data.User.type);
        console.log(response.data.User.type);
      })
      .catch((error) => {
        console.error(error);
      });
  }; 
  
  useEffect(() => {
        fetchUserDetails(token);
  }, [token]);